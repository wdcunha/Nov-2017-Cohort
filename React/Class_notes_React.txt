package.json has settings for the project like the name
README.md is a great guide for using React
index.html is in public folder and we rarely work on it
index.js is in the src folder with some imports lines



1) apm install language-javascript-jsx          (globally)
2) apm install language-babel                   (globally)
   can be done inside atom (settings/install)   (globally)
3) npm install -g create-react-app              (globally)
4) sudo npm install -g create-react-app         (globally)
5) create-react-app awesome-answers-react \  create-react-app amazon-app-react
6) go to the directory created (in this case: awesome-answers-react)
7) npm start
8) deleted some files on src folder
9) index.js changed
   deleted line with app
   added components for the folder where is app.js
10) created code to show some content in the index page from awesome (question)
    method QuestionDetails()
    it need to be inside a tag div
11) we can define in package.json a port for the server
    "start": "PORT=4545react-scripts start",
12) created a method to show what had done
    QuestionShowPage()
13) created App method to enclose all of previous code
    without creating elements in html file
14) added props to make it dinamically
    set up author equal empty object in case null
15) QuestionShowPage addded
    when passing string, put inside {}
    when passing object, {{}}
16) added Field to treat fields to generalize (reuse)
17) like in rails, it has  modules using import to use it
    *limited browser support (maybe chrome and firefox)
    *not use directly in node, but inside module
    *
18) created a directory to isolate the components
    added file App.js and all components need to have the same name
    import react in the first line

19) created file QuestionShowPage.js and all content put there
20) created file QuestionDetails.js
21) created file AnswerDetails.js
22) created Field.js
23) inseted line in index js
    import App from .... (app will call every other methods)
    import in all files where has dependence
24) adding some style
    starting in QuestionShowPage
    added style inside in double {}
25) added in QuestionDetails a const for style
26) added set for AnswerDetails in css
27) created a directory data
    *it received data for now until reach a DB
28) created some files
    QuestionIndexPage.js
    added import for data
29) added import inside app.js
30) added div and calling for QuestionIndexPage inside app.js
31) inserted AnswerList.js component file
32) added code in QuestionShowPage to provide code from AnswerList
33)
34)



Success! Created awesome-answers-react at /home/wellington/CodeCore/Nov-2017-Cohort/React/awesome-answers-react
Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd awesome-answers-react
  npm start



>>>>>>>>>>  refactoring components

1) changed line import react putting component
2) changed functions to class extends Component
   included render - needs to wrap all the code from former function
3) added constructor for classes
   added super to call tools from Component that is parent
   added inside const state:  this.state.question
   done the same for QuestionIndexPage
4) react developer tools chrome (intalled on chrome)
   it gives a react tab inside inpector (F12) where is possible to make changes opening items from state on there
5) link below is reference for code of many reacts events
    https://reactjs.org/docs/events.html
6) added in QuestionIndexPage code to delete questions index
   onClick event
   created method deleteQuestion
   setState added inseted of using pop method that causes buch issues (this will just take delete action in front end side)
   when we assign a method for a variable, it's gone, so need to add line to assign it for a variable with bind (inside state)
   to take the id, used event as argument in the method deleteQuestion
   added data-id to take it for deleting the line
   filter returns a copy of the array
   currentTarget is a string, so need to be parsed
7) added delete for question in QuestionShowPage
8) added delete for answer in QuestionShowPage
   button goes in AnswerDetails
   the trick is how to do the component communicate in the middle of the others
   a) put button in AnswerDetails
   b) used props.onDeleteClick
      the value we will pass into delete button is a function
   c) added a const to support line above
   d) in AnswerList call onDeleteClick bellow AnswerDetails call
   e) added const to support line above
   f) added onAnswerDeleteClick inside tag AnswerList in the QuestionShowPage
   g) added method deleteAnswer
   h) added line with bindin inside constructor to load it
      bind is used because it returns a callback
   i)

9) created QuestionForm.js in components folder
   added code to show a form
10) added line to import QuestionForm in QuestionIndexPage
11) added code in QuestionIndexPage below question title
    <QuestionForm
    onSubmit={() => {console.log('Test!')}}
    />
12) added addQuestion in QuestionIndexPage as callback
    inserted line call inside constructor
    everything done until here is saved in the state
13) 






\\bump
